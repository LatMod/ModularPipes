buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		jcenter()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
		classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.1.0'
	}
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'maven'

apply from: 'https://raw.githubusercontent.com/MinecraftModDevelopment/Gradle-Collection/master/generic/markdown-git-changelog.gradle'

def ENV = System.getenv()
version = ENV.BUILD_NUMBER ? "${mod_version}.${ENV.BUILD_NUMBER}" : "${mod_version}.custom"
group = package_group
archivesBaseName = mod_name

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
	sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    mappings channel: 'snapshot', version: "${mappings_version}-${mc_version}"
    runs {
        client = {
			properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
			mods {
				ModularPipes {
					source sourceSets.main
				}
				ItemFilters {
					source project(':Item-Filters').sourceSets.main
				}
			}
        }
        server = {
			properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
			mods {
				ModularPipes {
					source sourceSets.main
				}
				ItemFilters {
					source project(':Item-Filters').sourceSets.main
				}
			}
        }
    }
}

repositories {
	mavenLocal()
	maven { url "https://dvs1.progwml6.com/files/maven" } //JEI
	maven { url "https://minecraft.curseforge.com/api/maven/" } //Forestry
}

dependencies {
	minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
  	compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
  	runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")
	compile project(":Item-Filters")
}

processResources {
	inputs.property "version", project.version
	inputs.property "mcversion", mc_version

	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
		expand 'version': project.version, 'mcversion': mc_version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

task deobfJar(type:Jar) {
	from sourceSets.main.output
	classifier 'deobf'
}

artifacts {
	archives sourcesJar
	archives javadocJar
	archives deobfJar
}

if (ENV.LOCAL_MAVEN) {
	uploadArchives {
		repositories {
			mavenDeployer {
				repository(url: "file://${ENV.LOCAL_MAVEN}")
			}
		}
	}
}

if (ENV.CURSEFORGE_KEY) {
	curseforge {
		apiKey = ENV.CURSEFORGE_KEY
		project {
			id = "${curseforge_id}"
			releaseType = "release"
			addGameVersion "${mc_version}"
			changelog = getGitChangelog
			changelogType = 'markdown'
			addArtifact(sourceJar)
			addArtifact(javadocJar)
		}
	}
}